michaela.vitkova@asu.cas.cz
vitkova@mail.asu.cas.cz

NEXT:

Auch in Result-File:
    Link zu Erlaeuterungen im GitHubWiki


    Orbit parameter output (in JSON-File):
        Results:
        Transit times:
            T1, T2, TT, T3, T4, T14
            TT (Time of Transit): The time of minimum projected separation between the star and planet, as seen by the observer
            b (Transit Impact parameter): minimum projected separation at the time of transit, in stellar radii
                Bug Gefahr: der relative Radius bezieht sich auf den verdeckten Koerper? Das waere bei sekundaeren Eclipses wohl unerwuenscht
            T12 (Ingress) is the period when an exoplanet begins to cross in front of its host star. It consists of two parts:
                T1 Exterior ingress (first contact): The moment when the planet's disk first touches the edge of the star's disk.
                T2 Interior ingress (second contact): The point at which the entire planet has moved onto the stellar disk.
            T34 (Egress) is the period when an exoplanet exits its transit across the star. It also has two parts:
                T3 Interior egress (third contact): The moment when the planet's disk touches the opposite edge of the star's disk as it begins to exit.
                T4 Exterior egress (fourth contact): The point at which the planet has completely moved off the star's disk, concluding the transit.
            The accuracy of all transit times depends on the parameter dt, the real time difference between simulation iterations.
            By contrast the timestamps and luminosity values of the lightcurve minima have been slightly adjusted using quadratic interpolation.


    Auch fuer secondary eclipses (Sonne verdeckt Planet)
        AI-Anfrage: Wir beobachten die Helligkeit eines viele Lichtjahre entfernten Sternsystems mit einem Stern und einem Exoplaneten.
        Die Blickrichtung von der Erde zu dem Stern bildet mit der Verbindung von dem Stern zu dem Exoplaneten einen Winkel alpha.
        Wenn alpha = 0 Grad, befindet sich der Exoplanet von der Erde aus gesehen genau vor dem Stern. Bei alpha=180 Grad befindet
        sich der Exoplanet genau hinter dem Stern. Bei alpha=90 Grad befindet sich der Exoplanet seitlich vom Stern und es wird von
        der Erde aus gesehen genau die Haelfte des Exoplaneten von dem Stern angeleuchtet. Sei max_light die maximale Lichtmenge
        (Luminosity), die der Exoplanet von dem Stern Richtung Erde reflektieren kann, wenn die komplette der Erde zugewandte
        Haelfte des Exoplaneten von dem Stern angeleuchtet wird.  Schreibe eine Pythonfunktion, die abhaengig von alpha errechnet,
        wie viel Prozent von max_light von dem Exoplaneten Richtung Erde reflektiert wird.

        def reflected_light_percentage(alpha):
            # Konvertiere alpha in Radiant
            alpha_rad = math.radians(alpha)

            # Berechne den Prozentsatz des reflektierten Lichts
            percentage = 50 * (1 + math.cos(alpha_rad))

            return percentage



    Example videos
        Videos erstellen und (auf youtube? eher vimeo wg. Bildqualitaet) veröffentlichen.

            Sternsysteme aus weiteren Papern visualisieren.
                Zunaechst nur Systeme mit nur einem Stern

    Wiki aktualisieren.
        Results Output auf eigener Seite im Wiki dokumentieren.
            Vielleicht doch ASCII-Namen fuer Omega etc. waehlen? Ansonsten die Unicodes im Wiki erklaeren
                "\u03a9": 0.0,
                "\u03c9": 1.5707963267948966,
                "\u03c0": 1.5707963267948966,

        Programm ist optimiert fuer Visualisierung. Nicht fuer numerische Praezision. Kleines dt bei kleinen Perioden notwendig. Trotzdem ungenau.
        Im Wiki die Videos verlinken.
        Evtl. restliche Formulierungen von AI verbessern lassen.
            Take a look at this text on a page of a wiki about a python library. The text is written in mark-up language.
            Improve the language, for example by removing spelling errors and making the formulations more elegant.
            Format your improvements in the same mark-up language: ""

VERSION 1.0.0 veroeffentlichen !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

    Fragen an Akademiker:
        Initial velocity or gravitational parameter is incorrect for systems without a domineering mass (i.e. one star systems)
            Idee: Velocity hack auf 3 Sterne ausweiten 
        How do I get my project used by others?
            Publish as a paper?
            How do I get my project published as a paper?
        Where do astronomers gather? Is https://astronomy.stackexchange.com/ the best place to ask questions?
        Is there a community of astronomers specialized in exoplanets that would be welcoming to a dabbling layman like me?
        How do I reliably find out about new papers with interesting star systems? Searching on "arxiv.org"? Or is there a better way?

        Is the "Transit Impact parameter" usually (more or less) the same for each
        planet-star-eclipse or does it change from one orbit to the next?

        How to model sun spots?
            Nora said (in episode 37, at 12:00): Spots move away from the center. Why?
            Nora said (in episode 37, at 14:00): Peaks in frequency spectrum are integer multiples of peak with highest power. (harmonics) Why?
            Is it sufficient to just model the lowest frequency? How big is the part I would miss?
        How to model pulsations and the like (sine curve)?
            Nora said (in episode 37, at 15:30): Peaks in frequency spectrum are random.
        Should flares be modeled or are they too unpredictable?

    PR:
        Bekannte:
            https://www.noraeisner.com/
            Aiden
            Brian

        Universitäten:
            https://nbi.ku.dk/english/research/astrophysics/exoplanets/
            https://www.iau.org/administration/membership/individual/11759/

        Organisationen:
            https://www.aavso.org/
            https://www.astropy.org/

        Foren
            https://astronomy.stackexchange.com/
            https://space.stackexchange.com/
            https://forum.astronomisk.dk/
            https://www.astrobin.com/forum/
            https://forum.astronomie.de/

            https://www.reddit.com/r/exoplanets/
            https://www.reddit.com/r/TheExoplanetsChannel/
            https://www.reddit.com/r/askastronomy/
            https://www.reddit.com/r/Astronomy/
            https://www.reddit.com/r/astrophysics/
            https://www.reddit.com/r/space/


    Um Hinweis auf CurveSimulator(-Paper?) bei Veroeffentlichungen bitten
        Im GitHubWiki
        Print in Konsole
        Im JSON File
        Copyright notice ins Video?

    Planet Albedo
        Bei Total System Luminosity beruecksichtigen -> kleiner dip in lightcurve bei secondary eclipse
        Phasen beruecksichtigen: Halbplanet, Vollplanet, ...

    Add Neptun's mass and radius to astronomical constants in config file?

    Orbits einzeichnen?
        Kleiner Punkt (nur 1 Pixel?) fuer jeden Frame fuer jeden Koerper
        Option draw_orbits (on/off) (pro Video oder pro Koerper?)
        Option orbit_color

    Radial velocity:
        Extraplot im Video oder als PNG-file speichern: Lightcurve und die Geschwindigkeit in Beobachterrichtung (y-Achse) für jeden Stern.
        Plot radial velocity (movement of star to/from viewer). Provides a check if the simulation is realistic.
        Farbe des Sterns abhängig von RV varieren?

    How does an exomoon influence transit variation? Fun :)
    But how can I provide meaningful orbit parameters for a moon?

    Model variable stars:
        Parameter für regelmäßige Helligkeitsänderungen: variation = [(amplitude, periode, phase(shift?))]
        Das deckt auch Sunspots ab. Die wären sonst zu beschwerlich.
        Evtl. ermoeglichen, als Parameter den Namen einer Funktion anzugeben, die die Helligkeit des Sterns abhaengig vom Zeitpunkt (in BJD?) berechnet.

    Multiple Eclipses (e.g. Triply Eclipsing Triples, >=3 bodies in line of sight):
        Handle them correctly
        Example systems: https://arxiv.org/pdf/2204.02539.pdf



####################################################

I implemented all suggestions from zoom call 29.03.2022, but tried and dismissed using astronomical constants and units from astropy because 100 times slower.

########################################

    Debugging State Vector Calculation:
        Fuer nichttriviale Orbits (z.B. i=90, ϖ=0, aber Ω!=0) liegt die Ellipse anders als in https://orbitalmechanics.info/ (oder auch Geogebra?) !!!
        Die Form der Ellipse ist vermutlich auch nur fuer Ω=0 korrekt.
        Ich habe keplerian_elements_to_state_vectors() zu keplerian_elements_to_state_vectors_debug() vereinfacht.
        Ich habe eine altenative Berechnungsmethode aus einem anderen Paper in keplerian_elements_to_state_vectors_debug_new() implementiert.
            Diese produziert die gleichen Fehler :(
        Veraenderungen von ϖ werden sowohl fuer i=90 und i=45 korrekt berechnet.
        Das einzige Problem ist vermutllich Ω!=0.
        Alternative Berechnung fuer Startposition (state vector) aus Quelle [f] in keplerian_elements_to_state_vectors_debug_new liefert fuer Ω!=0 genau den gleichen Fehler wie die urspruengliche Berechnung!
        Alternative Berechnung fuer ea (eccentric anomaly) aus Quelle [f] in keplerian_elements_to_state_vectors_debug_new liefert fuer Ω!=0 genau den gleichen Fehler wie die urspruengliche Berechnung!
        Schoene Darstellung von Orbits abhaengig von Kepler-Parametern zum vergleichen: https://orbitalmechanics.info/
        LOESUNG:
            2 der 3 Parameter ω, ϖ, Ω muessen bekannt sein. Der dritte wird aus den anderen beiden mit ω = ϖ - Ω berechnet.
            Wenn man Ω = ϖ setzt (und folglich ω=0), verhaelt sich der Orbit bei Aenderungen von Ω korrekt.
            Mit den Daten unseres Sonnensystems auf https://ssd.jpl.nasa.gov/planets/approx_pos.html Table 1, die als Konvention
            Transit bei i = 0 Grad haben, tauschen edge-on und overhead view. Wenn ich die Inklination an die Transit-bei-90-Grad-
            Konvention anpasse (i_90 = 90 - i_0 laut perplexity) werden die Orbits desto merkwuerdiger, je groesser Ω ist.


    Debugging gravitational parameter mu for star systems without a domineering body, e.g. binary star systems
        Special case: 2 stars, second star nu=90 e=0 i=90:
            dy=0, dz=0, dx=sqrt(mu/a), a((mu*P**2)/(4*pi**2))**(1/3)
        Hacking velocity with a correction: self.velocity /= correction
            Let MassB < MassA, e = 0:
            correction = 1 + (MassB / MassA)
            Masses 6.5 and 5.9 -> correction = 1.91
            Mass A = Mass B -> correction = 2.0
        It's more complicate for systems with more than 2 stars...

 #######################

 CHANGELOG

    0.2.15  Text "lichtgestalter/CurveSimulator" added to video.
            Debugging-Code (especially for state vector calculation) moved to backup files in folder "debug".
    0.2.16  Lightcurve in video now contains all data.
    0.2.17  Calculates for each body how many video frames are needed to complete one orbit.
    0.2.18  Using Kepler's Third Law, calculates Period P from semi-major axis a and vice versa.
    0.2.19  Calculates the initial velocity of the primary body based on the principles of
            conservation of momentum and the center of mass motion.
    0.2.20  Correct handling of secondary stars
    0.2.21  Configfile errorproofing
    0.2.22  Example videos
                TIC470710327 (with hacked velocity correction)
                TOI-4504 / TIC349972412 (1 star, 2 transiting planets, 1 non-transiting planet)
    0.3.0   limb darkening alternative models/parameters
    0.3.1   check if ffmpeg is available

